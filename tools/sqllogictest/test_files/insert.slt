##########
## INSERT tests
##########


statement ok
CREATE TABLE aggregate_test_100 (
  c1  VARCHAR,
  c2  TINYINT,
  c3  SMALLINT,
  c4  SMALLINT,
  c5  INT,
  c6  BIGINT,
  c7  SMALLINT,
  c8  INT,
  c9 VARCHAR,
  c10 DOUBLE,
  c11 VARCHAR
)

# test insert with column names
statement ok
CREATE TABLE table_without_values(id BIGINT, name varchar);

query I
insert into table_without_values(id, name) values(1, 'foo');
----
1

query I
insert into table_without_values(name, id) values('bar', 2);
----
1

statement error Schema contains duplicate unqualified field name id
insert into table_without_values(id, id) values(3, 3);

statement error schema error: expected INTEGER got VARCHAR
insert into table_without_values(name, id) values(4, 'zoo');

statement error Error during planning: Column count doesn't match insert query!
insert into table_without_values(id) values(4, 'zoo');

# insert NULL values for the missing column (name)
query I
insert into table_without_values(id) values(4);
----
1

query LT rowsort
select * from table_without_values;
----
1 foo
2 bar
4 NULL

statement ok
drop table table_without_values;


# test insert with non-nullable column
statement ok
CREATE TABLE table_without_values(field1 BIGINT, field2 BIGINT);

query I
insert into table_without_values values(1, 100);
----
1

query I
insert into table_without_values values(2, NULL);
----
1

# insert NULL values for the missing column (field2)
query I
insert into table_without_values(field1) values(3);
----
1

# insert NULL values for the missing column (field1), but column is non-nullable
statement error Execution error: Invalid batch column at '0' has null but schema specifies non-nullable
insert into table_without_values(field2) values(300);

statement error Execution error: Invalid batch column at '0' has null but schema specifies non-nullable
insert into table_without_values values(NULL, 300);

statement error Execution error: Invalid batch column at '0' has null but schema specifies non-nullable
insert into table_without_values values(3, 300), (NULL, 400);

query LL rowsort
select * from table_without_values;
----
1 100
2 NULL
3 NULL

statement ok
drop table table_without_values;


### Test for creating tables into directories that do not already exist
# note use of `scratch` directory (which is cleared between runs)

statement ok
create external table new_empty_table(x int) stored as parquet  location 'test_files/scratch/insert/new_empty_table/'; -- needs trailing slash

# should start empty
query I
select * from new_empty_table;
----

# should succeed and the table should create the direectory
statement ok
insert into new_empty_table values (1);

# Now has values
query I
select * from new_empty_table;
----
1

statement ok
drop table new_empty_table;

## test we get an error if the path doesn't end in slash
statement ok
create external table bad_new_empty_table(x int) stored as parquet  location 'test_files/scratch/insert/bad_new_empty_table'; -- no trailing slash

# should fail
query error DataFusion error: Error during planning: Inserting into a ListingTable backed by a single file is not supported, URL is possibly missing a trailing `/`\. To append to an existing file use StreamTable, e\.g\. by using CREATE UNBOUNDED EXTERNAL TABLE
insert into bad_new_empty_table values (1);

statement ok
drop table bad_new_empty_table;


### Test for specifying column's default value

statement ok
create table test_column_defaults(
  a int,
  b int not null default null,
  c int default 100*2+300,
  d text default lower('DEFAULT_TEXT'),
  e timestamp default now()
)

query I
insert into test_column_defaults values(1, 10, 100, 'ABC', now())
----
1

statement error DataFusion error: Execution error: Invalid batch column at '1' has null but schema specifies non-nullable
insert into test_column_defaults(a) values(2)

query I
insert into test_column_defaults(b) values(20)
----
1

query IIIT rowsort
select a,b,c,d from test_column_defaults
----
1 10 100 ABC
NULL 20 500 default_text

# fill the timestamp column with default value `now()` again, it should be different from the previous one
query I
insert into test_column_defaults(a, b, c, d) values(2, 20, 200, 'DEF')
----
1

# Ensure that the default expression `now()` is evaluated during insertion, not optimized away.
# Rows are inserted during different time, so their timestamp values should be different.
query I rowsort
select count(distinct e) from test_column_defaults
----
3

# Expect all rows to be true as now() was inserted into the table
query B rowsort
select e < now() from test_column_defaults
----
true
true
true

statement ok
drop table test_column_defaults


# test create table as
statement ok
create table test_column_defaults(
  a int,
  b int not null default null,
  c int default 100*2+300,
  d text default lower('DEFAULT_TEXT'),
  e timestamp default now()
) as values(1, 10, 100, 'ABC', now())

query I
insert into test_column_defaults(b) values(20)
----
1

query IIIT rowsort
select a,b,c,d from test_column_defaults
----
1 10 100 ABC
NULL 20 500 default_text

statement ok
drop table test_column_defaults

statement error DataFusion error: Error during planning: Column reference is not allowed in the DEFAULT expression : Schema error: No field named a.
create table test_column_defaults(a int, b int default a+1)
